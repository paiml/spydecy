name: Release Gate - Book Required

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [main]
    paths:
      - 'Cargo.toml'
      - '**/Cargo.toml'

jobs:
  enforce-book-updates:
    name: Enforce Book Documentation Updates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to check for changes

      - name: Check for version bump
        id: version-check
        run: |
          # Extract current version from Cargo.toml
          CURRENT_VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Check if this is a new version
          if git tag | grep -q "v$CURRENT_VERSION"; then
            echo "existing_tag=true" >> $GITHUB_OUTPUT
          else
            echo "existing_tag=false" >> $GITHUB_OUTPUT
            echo "new_version=true" >> $GITHUB_OUTPUT
          fi

      - name: Check book updates
        if: steps.version-check.outputs.new_version == 'true'
        run: |
          echo "🔍 Checking for book updates..."

          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            echo "✅ First release - book check skipped"
            exit 0
          fi

          # Check if book files were modified since last tag
          BOOK_CHANGES=$(git diff --name-only $PREV_TAG HEAD | grep -E '^book/|^book.toml' || true)

          if [ -z "$BOOK_CHANGES" ]; then
            echo "❌ ERROR: New version detected but no book updates found!"
            echo ""
            echo "When releasing a new version, you must update the book documentation."
            echo "Please update at least one of:"
            echo "  - book/src/changelog.md (with release notes)"
            echo "  - book/src/introduction.md (if features changed)"
            echo "  - Relevant feature documentation"
            echo ""
            echo "Current version: ${{ steps.version-check.outputs.current_version }}"
            echo "Previous tag: $PREV_TAG"
            exit 1
          fi

          echo "✅ Book updates detected:"
          echo "$BOOK_CHANGES"

      - name: Install mdbook
        run: |
          cargo install mdbook --vers "^0.4" --locked

      - name: Test book builds successfully
        run: |
          echo "📚 Building book..."
          mdbook build book

          if [ ! -d "book/build/html" ]; then
            echo "❌ ERROR: Book build failed to generate output"
            exit 1
          fi

          echo "✅ Book built successfully"

      - name: Test book code examples
        run: |
          echo "🧪 Testing book code examples..."
          mdbook test book
          echo "✅ All book code examples passed"

      - name: Release gate summary
        run: |
          echo "# Release Gate Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Book documentation is up to date**" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Book builds successfully**" >> $GITHUB_STEP_SUMMARY
          echo "✅ **All code examples tested**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Version: \`${{ steps.version-check.outputs.current_version }}\`" >> $GITHUB_STEP_SUMMARY
