name: Performance Benchmarks

on:
  push:
    branches: [main]
    paths:
      - 'benches/**'
      - 'crates/**'
      - '.github/workflows/benchmark.yml'
  pull_request:
    branches: [main]
    paths:
      - 'benches/**'
      - 'crates/**'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.10-dev libclang-14-dev

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Run benchmarks
        run: |
          cargo bench --workspace --no-fail-fast | tee benchmark-output.txt

      - name: Store benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            target/criterion/**/*
            benchmark-output.txt

      - name: Generate benchmark summary
        run: |
          echo "# Performance Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Optimizer Benchmarks" >> $GITHUB_STEP_SUMMARY
          echo "Measuring boundary elimination and optimization pipeline performance." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Extract key metrics from benchmark output
          if [ -f benchmark-output.txt ]; then
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            grep -A 2 "time:" benchmark-output.txt | head -20 >> $GITHUB_STEP_SUMMARY || echo "Benchmark data processing..." >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Unification Benchmarks" >> $GITHUB_STEP_SUMMARY
          echo "Measuring pattern unification performance (len, append, dict.get)." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“Š **Full HTML reports** available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All benchmarks completed successfully" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## Performance Benchmarks Complete âœ…\n\n' +
                    'Benchmark results are available in the workflow artifacts.\n\n' +
                    'Download the `benchmark-results` artifact to view detailed HTML reports.'
            })
